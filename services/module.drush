<?php
// $Id$

/**
 * @file
 * Built-in actions for listing and managing Drupal add-on modules.
 */

//////////////////////////////////////////////////////////////////////////////

//drush_alias('modules', array('module', 'list'));
//drush_alias('modules', array('module', 'list', 'outdated'));
//drush_alias('modules', array('module', 'list', 'available'));

//////////////////////////////////////////////////////////////////////////////
// MODULE SERVICE ACTIONS

/**
 * Lists all installed Drupal modules with their versions and descriptions.
 */
function drush_module_list() {
  $modules = array();
  foreach(module_list() as $name) {
    if ($module = _drush_module_info($name)) {
      $modules[] = array($name, $module->version, $module->description);
    }
  }

  if (DRUSH_VERBOSE) {
    $modules = array(array(t('Name'), t('Version'), t('Description'))) + $modules;
    drush_print(t('Installed Drupal modules:'));
    drush_print();
  }
  drush_print_table($modules, 2, DRUSH_VERBOSE);
}

/**
 * Lists all installed Drupal modules that have updates available.
 */
function drush_module_list_outdated() {
  drush_die(t('Sorry, this is not implemented yet.')); // TODO: implementation.
}

/**
 * Lists all available Drupal modules from the Drupal CVS repository.
 */
function drush_module_list_available() {
  drush_die(t('Sorry, this is not implemented yet.')); // TODO: implementation.
}

/**
 * Displays information on a given installed Drupal module.
 */
function drush_module_info($name) {
  if (empty($name))
    drush_die(t('No module name given as argument.'));
  if (!_drush_module_exists($name))
    drush_die(t('Module `%name\' is not installed.', array('%name' => $name)));

  if ($module = _drush_module_info($name)) {
    $modules = array(array($name, $module->version, $module->description));
    drush_print_table($modules);
  }
}

/**
 * Displays the current version number of a given installed Drupal module.
 */
function drush_module_version($name) {
  if (empty($name))
    drush_die(t('No module name given as argument.'));
  if (!_drush_module_exists($name))
    drush_die(t('Module `%name\' is not installed.', array('%name' => $name)));

  if ($module = _drush_module_info($name)) {
    drush_print(!empty($module->version) ? $module->version : 'N/A');
  }
}

/**
 * Downloads a given Drupal module into to the modules/ directory using CVS.
 */
function drush_module_download($name, $version = NULL) {
  if (empty($name))
    drush_die(t('No module name given as argument.'));

  $name = strtolower($name);
  if (DRUSH_VERBOSE) drush_print(t('Downloading module `%name\' using CVS...', array('%name' => $name)));

  $path = 'modules/' . $name;
  if (!DRUSH_SIMULATE && !($result = _drush_cvs_checkout($path, 'module', $name, $version))) {
    drush_die(t('Download of module `%name\' failed (use -v to see verbose output).', array('%name' => $name)));
  }

  drush_print(t('Module `%name\' successfully downloaded to %path.', array('%name' => $name, '%path' => $path)));
}

/**
 * Downloads, installs and enables a given Drupal module using CVS.
 */
function drush_module_install($name, $version = NULL) {
  if (empty($name))
    drush_die(t('No module name given as argument.'));
  if (_drush_module_exists($name))
    drush_die(t('Module `%name\' is already installed.', array('%name' => $name)));

  drush_module_download($name, $version);
  drush_module_enable($name);
}

/**
 * Enables a given Drupal module.
 */
function drush_module_enable($name) {
  if (empty($name))
    drush_die(t('No module name given as argument.'));
  if (!_drush_module_exists($name))
    drush_die(t('Module `%name\' is not installed.', array('%name' => $name)));

  drush_die(t('Sorry, this is not implemented yet.')); // TODO: implementation.
}

/**
 * Disables a given Drupal module.
 */
function drush_module_disable($name) {
  if (empty($name))
    drush_die(t('No module name given as argument.'));
  if (!_drush_module_exists($name))
    drush_die(t('Module `%name\' is not installed.', array('%name' => $name)));

  drush_die(t('Sorry, this is not implemented yet.')); // TODO: implementation.
}

/**
 * Disables, uninstalls and deletes a given Drupal module. (Use caution!)
 */
function drush_module_uninstall($name) {
  if (empty($name))
    drush_die(t('No module name given as argument.'));
  if (!_drush_module_exists($name))
    drush_die(t('Module `%name\' is not installed.', array('%name' => $name)));

  if (_drush_confirm(t('Are you sure you want to uninstall the module `%name\'?', array('%name' => $name)))) {
    if (DRUSH_VERBOSE) drush_print(t('Uninstalling module `%name\'...', array('%name' => $name)));
    //drush_module_disable($name);
    // TODO: call uninstall hook.
    $path = drupal_get_path('module', $name);
    _drush_shell_exec(sprintf('rm -rf %s', $path), 2);
    drush_print(t('Module `%name\' successfully uninstalled and deleted.', array('%name' => $name)));
  }
}

//////////////////////////////////////////////////////////////////////////////
// MODULE SERVICE HELPERS

function _drush_module_exists($name) {
  $path = drupal_get_path('module', $name);
  return !empty($path) && file_exists($path);
}

function _drush_module_info($name) {
  if (!_drush_module_exists($name))
    return NULL;

  $module = new stdClass();
  $module->version = ''; // No reliable way to determine this w/o manifest?
  $module->description = (!module_exist($name) ? '' :
    module_invoke($name, 'help', 'admin/modules#description'));

  $manifest = drupal_get_path('module', $name) . '/' . $name . '.info';
  if (file_exists($manifest) && ($metadata = parse_ini_file($manifest, FALSE))) {
    if (!empty($metadata['version']))
      $module->version = $metadata['version'];
    if (!empty($metadata['description']))
      $module->description = $metadata['description'];
  }

  return $module;
}

//////////////////////////////////////////////////////////////////////////////

// TODO: prevent removal of core modules?
